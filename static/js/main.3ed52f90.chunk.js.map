{"version":3,"sources":["Components/Balance/Balance.module.css","Components/TransactionHistory/TransactionHistory.module.css","Components/Controls/Controls.js","Components/Balance/Balance.js","Components/TransactionHistory/TransactionHistory.js","Components/Dashboard/Dashboard.js","Components/App.js","index.js","Components/Controls/Controls.module.css"],"names":["module","exports","balance","span","history","thead","td","th","Controls","state","amount","notify","message","toast","handleInputChange","e","_this","setState","target","value","handleOperation","name","props","onTransaction","Math","abs","this","react_default","a","createElement","className","styles","controls","input","type","onChange","button","onClick","react_toastify","Component","Balance","_ref","totalDeposits","totalWithdraws","TransactionHistory","transactions","map","transaction","key","id","date","Dashboard","handleNewTransaction","amountOfMoney","typeOfTranaction","shortid","generate","Date","toLocaleString","prevState","concat","Object","toConsumableArray","Number","localTransactions","localStorage","getItem","JSON","parse","prevProps","mass","setItem","stringify","_this$state","Fragment","Controls_Controls","Components_Balance_Balance","Components_TransactionHistory_TransactionHistory","App","Components_Dashboard_Dashboard","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3ed52f90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1oAYf\",\"span\":\"Balance_span__1hpcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3LHxX\",\"thead\":\"TransactionHistory_thead__1IAqU\",\"td\":\"TransactionHistory_td__2Bh3o\",\"th\":\"TransactionHistory_th__JGUwO\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Controls.module.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onTransaction: PropTypes.func.isRequired,\n    balance: PropTypes.number.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  notify = message => toast(message);\n\n  handleInputChange = e => {\n    this.setState({\n      amount: e.target.value,\n    });\n  };\n\n  handleOperation = e => {\n    if (\n      e.target.name === 'Withdraw' &&\n      this.state.amount > this.props.balance\n    ) {\n      this.notify('На счету недостаточно средств для проведения операции!');\n      this.setState({\n        amount: '',\n      });\n      return;\n    }\n\n    if (this.state.amount === 0 || this.state.amount === '') {\n      this.notify('Введите сумму для проведения операции!');\n      this.setState({\n        amount: '',\n      });\n      return;\n    }\n\n    this.props.onTransaction(Math.abs(this.state.amount), e.target.name);\n    this.setState({\n      amount: '',\n    });\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          className={styles.input}\n          type=\"number\"\n          name=\"text\"\n          value={amount}\n          onChange={this.handleInputChange}\n        />\n        <button\n          className={styles.button}\n          type=\"button\"\n          name=\"Deposit\"\n          onClick={this.handleOperation}\n        >\n          Deposit\n        </button>\n        <button\n          className={styles.button}\n          type=\"button\"\n          name=\"Withdraw\"\n          onClick={this.handleOperation}\n        >\n          Withdraw\n        </button>\n        <ToastContainer />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, totalDeposits, totalWithdraws }) => (\n  <section className={styles.balance}>\n    <span className={styles.span}> + {totalDeposits} $ </span>\n    <span className={styles.span}> - {totalWithdraws} $ </span>\n    <span className={styles.span}> Balance: {balance} $ </span>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  totalDeposits: PropTypes.number.isRequired,\n  totalWithdraws: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles.history}>\n      <thead className={styles.thead}>\n        <tr>\n          <th className={styles.th}>Transaction</th>\n          <th className={styles.th}>Amount</th>\n          <th className={styles.th}>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(transaction => (\n          <tr key={transaction.id}>\n            <td className={styles.td}>{transaction.type}</td>\n            <td className={styles.td}>{transaction.amount} $</td>\n            <td className={styles.td}>{transaction.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransatctionHistory from '../TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    totalDeposits: 0,\n    totalWithdraws: 0,\n  };\n\n  componentDidMount() {\n    const localTransactions = localStorage.getItem('transactions');\n\n    if (localTransactions) {\n      this.setState({ transactions: JSON.parse(localTransactions) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { mass } = this.state;\n    if (prevState.transaction !== mass) {\n      localStorage.setItem('transactions', JSON.stringify(mass));\n    }\n  }\n\n  handleNewTransaction = (amountOfMoney, typeOfTranaction) => {\n    const transaction = {\n      id: shortid.generate(),\n      type: typeOfTranaction,\n      amount: amountOfMoney,\n      date: new Date().toLocaleString(),\n    };\n\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, transaction],\n    }));\n\n    if (typeOfTranaction === 'Withdraw') {\n      this.setState(prevState => ({\n        balance: prevState.balance - amountOfMoney,\n        totalWithdraws: prevState.totalWithdraws + Number(amountOfMoney),\n      }));\n    }\n\n    if (typeOfTranaction === 'Deposit') {\n      this.setState(prevState => ({\n        balance: prevState.balance + Number(amountOfMoney),\n        totalDeposits: prevState.totalDeposits + Number(amountOfMoney),\n      }));\n    }\n  };\n\n  render() {\n    const { balance, totalDeposits, totalWithdraws, transactions } = this.state;\n    return (\n      <>\n        <Controls onTransaction={this.handleNewTransaction} balance={balance} />\n        <Balance\n          balance={balance}\n          totalDeposits={totalDeposits}\n          totalWithdraws={totalWithdraws}\n        />\n        <TransatctionHistory transactions={transactions} />\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return <Dashboard />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__11ko5\",\"button\":\"Controls_button__2K66O\",\"input\":\"Controls_input__1ivIM\"};"],"sourceRoot":""}